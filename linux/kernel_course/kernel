SURVEYING THE LINUX KERNEL
- Discovering and Controlling Hardware
	- Application -> Library (Std C Lib) -> Kernel -> Hardware (Mouse, Keyboard, Monitor)
	- Hardware info commands
		- lshw
		- lspci
		- lsusb
		- lsbk
		- lscpu
		- lsdev
	- Configuring Hardware
		- hdparm 
		- proc, dev, sys ( interacting with kernel )
		- inb outb
		- setpci
# lspci
# lspci -v (verbose)('kernel driver in use')
# lsusb
# lscpu (Bogo MIPS)(Speed Kernel assigns to CPU)

- System calls are functions implemented by the kernel and meant to be called from user space
	- They are Application Interface to the Kernel
	- About 300 system calls
	- include/uapi/asm-generic/unistd.h
	- system calls documented in man 2
	- Applications called through the standard library (libc)
	
- Read message from kernel
	- printk kernels function to print messages
	- output of printk is sent to 'RAM buffer'
	- important messages only print to console
	- logging daemon may send printk message to other places
	# dmesg 		    	    --> displays messages from RAM buffer
	# /var/log/messages 	    --> common place for kernel messages
	# tail -f /var/log/messages --> doesn't work on all distros
	- proc and sysfs are virtual filesystems
	- contents are generated when you ask
	- /proc --> mounted on proc at boot
		- ps command gets info from /proc 
		- sys sub directory ( kernel tunable variables in this dir)
		- each process has directory named PID
		- contains memory, program, files
		- hundreds of files per process
		- threads have entries under the directory 'task'
	- sysfs mounted on /sys
		- kernel object info
		- 'whats connected to what'
	- device files
		- char or block devices
		- driver interacts with device files
		- major, minor, (c or b) numbers
			- major number = which driver to use
			- minor number = driver assigns minor number
# ls /proc
# echo $$ (shell pid)
# ls -l /proc/5968/
# cd /sys 
# cd /dev
# ls -l /dev/null (c=char, 1=driver1, 3=driver reference)
# ls -l /dev/zero (c=char, 1=driver1, 5= driver reference)

			
	
